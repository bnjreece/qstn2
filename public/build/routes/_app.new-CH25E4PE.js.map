{
  "version": 3,
  "sources": ["../../../app/routes/_app.new.tsx", "../../../app/config/form-steps.ts", "../../../app/components/FormStepper.tsx", "../../../app/components/FormFields.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_app.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_app.new.tsx\");\n  import.meta.hot.lastModified = \"1733455676586.0352\";\n}\n// REMIX HMR END\n\nimport React, { useEffect, useState } from 'react';\nimport { json } from '@remix-run/node';\nimport { useActionData, useLoaderData, useSubmit } from '@remix-run/react';\nimport { requireUserId } from '../utils/auth.server';\nimport { supabase } from '../utils/supabase.server';\nimport { formSteps } from '../config/form-steps';\nimport { FormStepper } from '../components/FormStepper';\nimport { FormFields } from '../components/FormFields';\nfunction isErrorResponse(data) {\n  return 'error' in data;\n}\nexport async function loader({\n  request\n}) {\n  const userId = await requireUserId(request);\n\n  // Create a new document if one doesn't exist\n  const {\n    data: existingDocs\n  } = await supabase.from('documents').select('*').eq('user_id', userId).eq('is_complete', false).order('created_at', {\n    ascending: false\n  }).limit(1);\n  let document;\n  if (!existingDocs || existingDocs.length === 0) {\n    const {\n      data: newDoc\n    } = await supabase.from('documents').insert([{\n      user_id: userId,\n      title: 'My Strategic Plan',\n      is_complete: false\n    }]).select().single();\n    if (!newDoc) {\n      throw new Error('Failed to create document');\n    }\n    document = newDoc;\n\n    // Create initial sections\n    await supabase.from('document_sections').insert(formSteps.map((step, index) => ({\n      document_id: document.id,\n      section_type: step.id,\n      content: {},\n      order_index: index\n    })));\n  } else {\n    document = existingDocs[0];\n  }\n\n  // Load sections\n  const {\n    data: sections\n  } = await supabase.from('document_sections').select('*').eq('document_id', document.id).order('order_index', {\n    ascending: true\n  });\n  return json({\n    document,\n    sections\n  });\n}\nexport async function action({\n  request\n}) {\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const documentId = formData.get('documentId');\n  const sectionType = formData.get('sectionType');\n  const content = JSON.parse(formData.get('content'));\n  if (!documentId || !sectionType) {\n    return json({\n      error: 'Missing required fields'\n    }, {\n      status: 400\n    });\n  }\n\n  // Update section content\n  const {\n    error\n  } = await supabase.from('document_sections').update({\n    content\n  }).eq('document_id', documentId).eq('section_type', sectionType);\n  if (error) {\n    return json({\n      error: 'Failed to save changes'\n    }, {\n      status: 500\n    });\n  }\n  return json({\n    success: true\n  });\n}\nexport default function NewDocument() {\n  _s();\n  const {\n    document,\n    sections\n  } = useLoaderData();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [values, setValues] = useState({});\n  const submit = useSubmit();\n  const actionData = useActionData();\n\n  // Load initial values\n  useEffect(() => {\n    if (sections) {\n      const initialValues = sections.reduce((acc, section) => ({\n        ...acc,\n        [section.section_type]: section.content\n      }), {});\n      setValues(initialValues);\n    }\n  }, [sections]);\n\n  // Auto-save when values change\n  useEffect(() => {\n    if (document && sections) {\n      const currentSection = sections[currentStep];\n      const formData = new FormData();\n      formData.append('documentId', document.id);\n      formData.append('sectionType', currentSection.section_type);\n      formData.append('content', JSON.stringify(values[currentSection.section_type] || {}));\n      const timer = setTimeout(() => {\n        submit(formData, {\n          method: 'post'\n        });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [values, currentStep, document, sections, submit]);\n  const handleFieldChange = (fieldId, value) => {\n    const currentSection = sections[currentStep];\n    setValues(prev => ({\n      ...prev,\n      [currentSection.section_type]: {\n        ...prev[currentSection.section_type],\n        [fieldId]: value\n      }\n    }));\n  };\n  if (!document || !sections) {\n    return <div>Loading...</div>;\n  }\n  const currentStepData = formSteps[currentStep];\n  const currentSectionValues = values[sections[currentStep].section_type] || {};\n  return <div className=\"max-w-3xl mx-auto\">\n      <FormStepper steps={formSteps} currentStep={currentStep} onStepClick={setCurrentStep} />\n\n      <div className=\"bg-white shadow sm:rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <h3 className=\"text-lg font-medium leading-6 text-gray-900\">\n            {currentStepData.title}\n          </h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            {currentStepData.description}\n          </p>\n\n          <div className=\"mt-6\">\n            <FormFields step={currentStepData} values={currentSectionValues} onChange={handleFieldChange} />\n          </div>\n\n          {actionData && isErrorResponse(actionData) && <p className=\"mt-2 text-sm text-red-600\">\n              {actionData.error}\n            </p>}\n        </div>\n      </div>\n\n      <div className=\"mt-4 flex justify-between\">\n        <button type=\"button\" onClick={() => setCurrentStep(prev => Math.max(0, prev - 1))} disabled={currentStep === 0} className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\">\n          Previous\n        </button>\n        <button type=\"button\" onClick={() => setCurrentStep(prev => Math.min(formSteps.length - 1, prev + 1))} disabled={currentStep === formSteps.length - 1} className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\">\n          Next\n        </button>\n      </div>\n    </div>;\n}\n_s(NewDocument, \"O5e6DTtjsJoZHqvQHmr5TV3Hwh0=\", false, function () {\n  return [useLoaderData, useSubmit, useActionData];\n});\n_c = NewDocument;\nvar _c;\n$RefreshReg$(_c, \"NewDocument\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/config/form-steps.ts\"\n);\nimport.meta.hot.lastModified = \"1733455539400.0432\";\n}\n// REMIX HMR END\n\nimport type { FormStep } from \"../types/document\";\n\nexport const formSteps: FormStep[] = [\n  {\n    id: \"vision\",\n    title: \"Vision Statement\",\n    description: \"Define where your organization wants to be in the future\",\n    fields: [\n      {\n        id: \"statement\",\n        label: \"Vision Statement\",\n        type: \"textarea\",\n        placeholder: \"In 5-10 years, our organization will...\",\n        help: \"A vision statement describes the desired future position of your organization\"\n      }\n    ]\n  },\n  {\n    id: \"mission\",\n    title: \"Mission Statement\",\n    description: \"Define your organization's purpose and primary objectives\",\n    fields: [\n      {\n        id: \"statement\",\n        label: \"Mission Statement\",\n        type: \"textarea\",\n        placeholder: \"Our mission is to...\",\n        help: \"A mission statement describes why your organization exists and what it does\"\n      }\n    ]\n  },\n  {\n    id: \"goals\",\n    title: \"Strategic Goals\",\n    description: \"Define your major goals for the next 1-3 years\",\n    fields: [\n      {\n        id: \"goals\",\n        label: \"Strategic Goals\",\n        type: \"list\",\n        placeholder: \"Enter a strategic goal\",\n        help: \"List 3-5 major goals that will help achieve your vision\"\n      }\n    ]\n  },\n  {\n    id: \"objectives\",\n    title: \"Key Objectives\",\n    description: \"Define specific, measurable objectives for each goal\",\n    fields: [\n      {\n        id: \"objectives\",\n        label: \"Key Objectives\",\n        type: \"list\",\n        placeholder: \"Enter a SMART objective\",\n        help: \"Create SMART objectives (Specific, Measurable, Achievable, Relevant, Time-bound)\"\n      }\n    ]\n  },\n  {\n    id: \"strategy\",\n    title: \"Action Strategy\",\n    description: \"Define how you will achieve your objectives\",\n    fields: [\n      {\n        id: \"strategies\",\n        label: \"Strategic Actions\",\n        type: \"list\",\n        placeholder: \"Enter a strategic action\",\n        help: \"List specific actions that will help achieve your objectives\"\n      }\n    ]\n  }\n]; ", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/FormStepper.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/FormStepper.tsx\");\n  import.meta.hot.lastModified = \"1733455549112.2156\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nexport function FormStepper({\n  steps,\n  currentStep,\n  onStepClick\n}) {\n  return <nav aria-label=\"Progress\" className=\"mb-8\">\n      <ol role=\"list\" className=\"space-y-4 md:flex md:space-y-0 md:space-x-8\">\n        {steps.map((step, index) => <li key={step.id} className=\"md:flex-1\">\n            <button onClick={() => onStepClick(index)} className={`group flex flex-col border-l-4 py-2 pl-4 md:border-l-0 md:border-t-4 md:pl-0 md:pt-4 md:pb-0 ${index === currentStep ? 'border-indigo-600' : index < currentStep ? 'border-green-600' : 'border-gray-200'}`}>\n              <span className=\"text-sm font-medium\">\n                Step {index + 1}\n              </span>\n              <span className=\"text-sm\">{step.title}</span>\n            </button>\n          </li>)}\n      </ol>\n    </nav>;\n}\n_c = FormStepper;\nvar _c;\n$RefreshReg$(_c, \"FormStepper\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/FormFields.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/FormFields.tsx\");\n  import.meta.hot.lastModified = \"1733455578374.5222\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nexport function FormFields({\n  step,\n  values,\n  onChange\n}) {\n  const renderField = field => {\n    switch (field.type) {\n      case 'text':\n        return <input type=\"text\" id={field.id} value={values[field.id] || ''} onChange={e => onChange(field.id, e.target.value)} placeholder={field.placeholder} className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\" />;\n      case 'textarea':\n        return <textarea id={field.id} value={values[field.id] || ''} onChange={e => onChange(field.id, e.target.value)} placeholder={field.placeholder} rows={4} className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\" />;\n      case 'list':\n        const items = values[field.id] || [];\n        return <div className=\"space-y-2\">\n            {items.map((item, index) => <div key={index} className=\"flex gap-2\">\n                <input type=\"text\" value={item} onChange={e => {\n              const newItems = [...items];\n              newItems[index] = e.target.value;\n              onChange(field.id, newItems);\n            }} placeholder={field.placeholder} className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\" />\n                <button type=\"button\" onClick={() => {\n              const newItems = items.filter((_, i) => i !== index);\n              onChange(field.id, newItems);\n            }} className=\"inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n                  Remove\n                </button>\n              </div>)}\n            <button type=\"button\" onClick={() => onChange(field.id, [...items, ''])} className=\"inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n              Add Item\n            </button>\n          </div>;\n    }\n  };\n  return <div className=\"space-y-6\">\n      {step.fields.map(field => <div key={field.id}>\n          <label htmlFor={field.id} className=\"block text-sm font-medium text-gray-700\">\n            {field.label}\n          </label>\n          <div className=\"mt-1\">\n            {renderField(field)}\n          </div>\n          {field.help && <p className=\"mt-2 text-sm text-gray-500\">\n              {field.help}\n            </p>}\n        </div>)}\n    </div>;\n}\n_c = FormFields;\nvar _c;\n$RefreshReg$(_c, \"FormFields\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
