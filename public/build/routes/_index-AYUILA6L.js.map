{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../app/routes/_index.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1733449523089.2346\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport React from \"react\";\nimport { Container, Flex, Card, Heading, Text, Grid, Box, TextArea } from \"@radix-ui/themes\";\nexport async function loader() {\n  return json({\n    message: 'Personal Plan',\n    error: null\n  });\n}\nexport default function Index() {\n  _s();\n  const {\n    message\n  } = useLoaderData();\n  return <Box p=\"6\" style={{\n    minHeight: '100vh'\n  }}>\n      <Container size=\"3\">\n        <Flex direction=\"column\" gap=\"6\">\n          {/* Header */}\n          <Card size=\"4\">\n            <Flex justify=\"between\" align=\"center\" gap=\"4\">\n              <Heading size=\"8\" mb=\"1\">Personal Plan</Heading>\n              <Text size=\"2\" color=\"gray\">Last Updated: {new Date().toLocaleDateString()}</Text>\n            </Flex>\n          </Card>\n\n          {/* Core Values Section */}\n          <Card size=\"4\">\n            <Heading size=\"4\" mb=\"3\">Core Values</Heading>\n            <Text size=\"2\" color=\"gray\" mb=\"4\">(Fill in up to 5 of your strongest core values)</Text>\n            <Grid columns=\"5\" gap=\"3\">\n              {[1, 2, 3, 4, 5].map(i => <Box key={i}>\n                  <input placeholder={`Value ${i}`} className=\"rt-TextFieldInput rt-r-size-2\" style={{\n                width: '100%'\n              }} />\n                </Box>)}\n            </Grid>\n          </Card>\n\n          {/* Time Frame Sections */}\n          <Card size=\"4\">\n            <Heading size=\"4\" mb=\"4\">Long-term Aspirations (10-25 years)</Heading>\n            <Grid columns=\"4\" gap=\"4\">\n              {/* Relationships */}\n              <Box>\n                <Heading size=\"3\" mb=\"2\">Relationships</Heading>\n                <TextArea placeholder=\"Your relationship aspirations...\" size=\"3\" style={{\n                minHeight: '120px'\n              }} />\n              </Box>\n\n              {/* Achievements */}\n              <Box>\n                <Heading size=\"3\" mb=\"2\">Achievements</Heading>\n                <TextArea placeholder=\"Your achievement aspirations...\" size=\"3\" style={{\n                minHeight: '120px'\n              }} />\n              </Box>\n\n              {/* Rituals */}\n              <Box>\n                <Heading size=\"3\" mb=\"2\">Rituals</Heading>\n                <TextArea placeholder=\"Your ritual aspirations...\" size=\"3\" style={{\n                minHeight: '120px'\n              }} />\n              </Box>\n\n              {/* Wealth */}\n              <Box>\n                <Heading size=\"3\" mb=\"2\">Wealth (Experiences)</Heading>\n                <TextArea placeholder=\"Your wealth/experience aspirations...\" size=\"3\" style={{\n                minHeight: '120px'\n              }} />\n              </Box>\n            </Grid>\n          </Card>\n\n          {/* 1 Year Activities */}\n          <Card size=\"4\">\n            <Heading size=\"4\" mb=\"2\">1 Year Activities</Heading>\n            <Text size=\"2\" color=\"gray\" mb=\"4\">(5 or less)</Text>\n            <Flex direction=\"column\" gap=\"3\">\n              {[1, 2, 3, 4, 5].map(i => <Box key={i}>\n                  <input placeholder={`Activity ${i}`} className=\"rt-TextFieldInput rt-r-size-2\" style={{\n                width: '100%'\n              }} />\n                </Box>)}\n            </Flex>\n          </Card>\n\n          {/* 90 Day Activities */}\n          <Grid columns=\"2\" gap=\"4\">\n            {/* START Activities */}\n            <Card size=\"4\">\n              <Heading size=\"4\" mb=\"2\">90 Day Activities - START</Heading>\n              <Text size=\"2\" color=\"gray\" mb=\"4\">(5 or less)</Text>\n              <Flex direction=\"column\" gap=\"3\">\n                {[1, 2, 3, 4, 5].map(i => <Box key={i}>\n                    <input placeholder={`Start Activity ${i}`} className=\"rt-TextFieldInput rt-r-size-2\" style={{\n                  width: '100%'\n                }} />\n                  </Box>)}\n              </Flex>\n            </Card>\n\n            {/* STOP Activities */}\n            <Card size=\"4\">\n              <Heading size=\"4\" mb=\"2\">90 Day Activities - STOP</Heading>\n              <Text size=\"2\" color=\"gray\" mb=\"4\">(5 or less)</Text>\n              <Flex direction=\"column\" gap=\"3\">\n                {[1, 2, 3, 4, 5].map(i => <Box key={i}>\n                    <input placeholder={`Stop Activity ${i}`} className=\"rt-TextFieldInput rt-r-size-2\" style={{\n                  width: '100%'\n                }} />\n                  </Box>)}\n              </Flex>\n            </Card>\n          </Grid>\n        </Flex>\n      </Container>\n    </Box>;\n}\n_s(Index, \"KVVfPjqcmY1AL6EJPM/pBsM8uKc=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["p", "o", "r"]
}
